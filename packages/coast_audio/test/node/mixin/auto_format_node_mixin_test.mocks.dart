// Mocks generated by Mockito 5.4.4 from annotations
// in coast_audio/test/node/mixin/auto_format_node_mixin_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:coast_audio/coast_audio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAudioNode_0 extends _i1.SmartFake implements _i2.AudioNode {
  _FakeAudioNode_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAudioReadResult_1 extends _i1.SmartFake
    implements _i2.AudioReadResult {
  _FakeAudioReadResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AudioOutputBus].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudioOutputBus extends _i1.Mock implements _i2.AudioOutputBus {
  MockAudioOutputBus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AudioNode get node => (super.noSuchMethod(
        Invocation.getter(#node),
        returnValue: _FakeAudioNode_0(
          this,
          Invocation.getter(#node),
        ),
      ) as _i2.AudioNode);

  @override
  void onConnect(_i2.AudioInputBus? bus) => super.noSuchMethod(
        Invocation.method(
          #onConnect,
          [bus],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDisconnect() => super.noSuchMethod(
        Invocation.method(
          #onDisconnect,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.AudioReadResult read(_i2.AudioBuffer? buffer) => (super.noSuchMethod(
        Invocation.method(
          #read,
          [buffer],
        ),
        returnValue: _FakeAudioReadResult_1(
          this,
          Invocation.method(
            #read,
            [buffer],
          ),
        ),
      ) as _i2.AudioReadResult);
}
